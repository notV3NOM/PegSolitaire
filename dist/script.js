export class PegSolitaireBoard{constructor(){this._boardSize=7;this.board=document.getElementById("boardContainerID");this.textContainer=document.getElementById("textContainerID");this.nMoves=0;this.lifeTime=1e3;this.sleepTime=100;this.nExperiments=1;this.avgMoves=0;this.avgPegsRemaining=0;this.boardState="";this.boardHistory=[PegSolitaireBoard.defaultStartingState];this.sourcePeg=[-1,-1];this.userMoves=0;PegSolitaireBoard.InitializeBoard();this.textContainer.textContent=`
  Welcome to Peg Solitaire ! \n
  Click on the buttons below to start
`}static get defaultStartingState(){return"111111111111111101111111111111111"}static get finalState(){return"000000000000000010000000000000000"}static get boardSize(){return this._boardSize}static InitializeBoard=()=>{for(let i=0;i<PegSolitaireBoard.boardSize;++i){const row=document.createElement("div");row.setAttribute("id","rowID");row.className="row";for(let j=0;j<PegSolitaireBoard.boardSize;++j){const cell=document.createElement("div");cell.setAttribute("id",""+i+j);cell.className="cell";row.appendChild(cell)}document.getElementById("boardContainerID").appendChild(row)}for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){if(i==Math.floor(PegSolitaireBoard.boardSize/2)&&j==Math.floor(PegSolitaireBoard.boardSize/2)){continue}var peg=document.createElement("span");peg.className="peg";document.getElementById(""+i+j).appendChild(peg)}}};static InsideBoard=position=>{if(position[0]<0||position[0]>6||position[1]<0||position[1]>6){return false}if(position[0]<2&&position[1]<2||position[0]<2&&position[1]>4||position[0]>4&&position[1]<2||position[0]>4&&position[1]>4){return false}return true};static IsEmpty=position=>{if(document.getElementById(""+position[0]+position[1]).hasChildNodes()){return false}return true};static Add=(a,b)=>{return[a[0]+b[0],a[1]+b[1]]};static Equal=(a,b)=>{if(a[0]==b[0]&&a[1]==b[1]){return true}return false};static GetValidMoves=playerPosition=>{if(!PegSolitaireBoard.InsideBoard(playerPosition)||PegSolitaireBoard.IsEmpty(playerPosition)){return[]}const moveOffsets=[[-2,0],[2,0],[0,-2],[0,2]];return moveOffsets.reduce((validMoves,offset)=>{const move=PegSolitaireBoard.Add(playerPosition,offset);if(PegSolitaireBoard.InsideBoard(move)&&PegSolitaireBoard.IsEmpty(move)){validMoves.push(move)}return validMoves},[])};static RemovePeg=position=>{let peg=document.getElementById(""+position[0]+position[1]);if(peg.firstChild){peg.removeChild(peg.firstChild)}};static FindBetweenPeg=(startingPos,EndPos)=>{if(startingPos[0]===EndPos[0]&&startingPos[1]<EndPos[1]){return[startingPos[0],startingPos[1]+1]}else if(startingPos[0]===EndPos[0]&&startingPos[1]>EndPos[1]){return[startingPos[0],startingPos[1]-1]}if(startingPos[1]===EndPos[1]&&startingPos[0]<EndPos[0]){return[startingPos[0]+1,startingPos[1]]}else if(startingPos[1]===EndPos[1]&&startingPos[0]>EndPos[0]){return[startingPos[0]-1,startingPos[1]]}};static EmptyPegs=()=>{let count=0;for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){if(PegSolitaireBoard.InsideBoard([i,j])&&PegSolitaireBoard.IsEmpty([i,j])){count++}}}return count};UpdateStats=()=>{this.textContainer.textContent=`
    ${this.nMoves} move(s) done \n
    Pegs Remaining :  ${33-PegSolitaireBoard.EmptyPegs()}
    `};MovePeg=(startPos,endPos)=>{const validMove=PegSolitaireBoard.GetValidMoves(startPos).find(move=>PegSolitaireBoard.Equal(move,endPos));if(validMove){PegSolitaireBoard.RemovePeg(endPos);PegSolitaireBoard.RemovePeg(startPos);PegSolitaireBoard.RemovePeg(PegSolitaireBoard.FindBetweenPeg(startPos,endPos));const peg=document.createElement("span");peg.className="movedPeg";document.getElementById(""+endPos[0]+endPos[1]).appendChild(peg);this.nMoves++;this.UpdateStats();return true}else{console.log("Attempted invalid move ",startPos,endPos);console.log("Valid moves were ",PegSolitaireBoard.GetValidMoves(startPos));return false}};static MovePegForce=(startPos,endPos)=>{PegSolitaireBoard.RemovePeg(endPos);PegSolitaireBoard.RemovePeg(startPos);PegSolitaireBoard.RemovePeg(PegSolitaireBoard.FindBetweenPeg(startPos,endPos));var peg=document.createElement("span");peg.className="movedPeg";document.getElementById(""+endPos[0]+endPos[1]).appendChild(peg)};static AllowedMoves=()=>{let allowedMoves=[];for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){const startPos=[i,j];const validMoves=PegSolitaireBoard.GetValidMoves(startPos);if(validMoves.length){validMoves.forEach(endPos=>{const betweenPeg=PegSolitaireBoard.FindBetweenPeg(startPos,endPos);if(!PegSolitaireBoard.IsEmpty(betweenPeg)){allowedMoves.push([startPos,endPos])}})}}}return allowedMoves};static MoveablePegsActual=()=>{const moveablePegsSet=new Set;PegSolitaireBoard.AllowedMoves().forEach(([source,_])=>{moveablePegsSet.add(""+source[0]+source[1])});return Array.from(moveablePegsSet,move=>[Number(move[0]),Number(move[1])])};RandomMove=()=>{let allowedMoves=PegSolitaireBoard.AllowedMoves();if(!allowedMoves.length)return;let randomElement=allowedMoves[Math.floor(Math.random()*allowedMoves.length)];this.MovePeg(randomElement[0],randomElement[1])};static ClearCells=()=>{for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){document.getElementById(""+i+j).className="cell"}}};ClearListeners=()=>{for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){const lastMove=document.getElementById(""+i+j).firstChild;if(lastMove&&lastMove.className==="movedPeg"){lastMove.className="peg"}}}this.board.innerHTML=this.board.innerHTML};UpdateReport=()=>{this.textContainer.textContent=`
    Report
    Strategy : Greedy with Random Moves
    Number of Experiments : ${this.nExperiments}
    Average Moves per experiment : ${this.avgMoves/this.nExperiments}
    Average No of Pegs remaining : ${this.avgPegsRemaining/this.nExperiments}
    `};UpdateDfsReport=(steps,time)=>{this.textContainer.textContent=`
    Report
    Strategy : DFS
    Number of states explored : ${steps}
    Time taken : ${time} ms
    `};static sleep=ms=>new Promise(r=>setTimeout(r,ms));ResetBoard=()=>{this.nMoves=0;this.board.replaceChildren();PegSolitaireBoard.InitializeBoard()};RunRandomGame=async()=>{for(let k=0;k<this.lifeTime;k++){if(!PegSolitaireBoard.AllowedMoves().length){break}this.RandomMove();await PegSolitaireBoard.sleep(sleepTime)}};static updateStatusWithDot(text){document.getElementById("status").textContent=text;const dotElement=document.getElementById("statusDot");const statusText=text.toLowerCase();if(statusText.includes("idle")){dotElement.style.backgroundColor="green"}else if(statusText.includes("running")||statusText.includes("exploring")){dotElement.style.backgroundColor="red"}else{dotElement.style.backgroundColor="blue"}}RunExperiment=async days=>{PegSolitaireBoard.updateStatusWithDot("Random Agent : Running");document.getElementById("randomBtn").style.display="none";document.getElementById("dfsBtn").style.display="none";document.getElementById("manualBtn").style.display="none";this.nExperiments=days;this.avgMoves=0;this.avgPegsRemaining=0;for(let k=0;k<this.nExperiments;++k){this.ResetBoard();await this.RunRandomGame();this.avgMoves+=this.nMoves;this.avgPegsRemaining+=33-PegSolitaireBoard.EmptyPegs()}this.UpdateReport();PegSolitaireBoard.updateStatusWithDot("Idle")};static GetBoardState=()=>{let state="";for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){if(PegSolitaireBoard.InsideBoard([i,j])){state+=PegSolitaireBoard.IsEmpty([i,j])?"0":"1"}}}return state};SetBoardState=state=>{this.board.replaceChildren();for(let i=0;i<PegSolitaireBoard.boardSize;++i){var row=document.createElement("div");row.setAttribute("id","rowID");row.className="row";for(let j=0;j<PegSolitaireBoard.boardSize;++j){var cell=document.createElement("div");cell.setAttribute("id",""+i+j);cell.className="cell";row.appendChild(cell)}this.board.appendChild(row)}let counter=0;for(let i=0;i<PegSolitaireBoard.boardSize;++i){for(let j=0;j<PegSolitaireBoard.boardSize;++j){if(PegSolitaireBoard.InsideBoard([i,j])){if(state[counter]=="1"){var peg=document.createElement("span");peg.className="peg";document.getElementById(""+i+j).appendChild(peg)}counter++}}}};PrepareSourceInput=()=>{this.ClearListeners();const abortSourceControllers=new AbortController;let len=PegSolitaireBoard.AllowedMoves().length;if(len){this.textContainer.textContent=`
        ${this.userMoves} moves done
        ${len} legal moves can be performed 
      `;PegSolitaireBoard.MoveablePegsActual().forEach(peg=>{const pegElement=document.getElementById(""+peg[0]+peg[1]).firstChild;pegElement.className="moveablePeg";pegElement.draggable=true;pegElement.addEventListener("mouseover",()=>{pegElement.click()});pegElement.addEventListener("touchstart",e=>{e.preventDefault();pegElement.click()});pegElement.addEventListener("click",function(){pegElement.className="selectedPeg";this.sourcePeg=[peg[0],peg[1]];PegSolitaireBoard.MoveablePegsActual().forEach(remainingPeg=>{if(!PegSolitaireBoard.Equal(peg,remainingPeg)){document.getElementById(""+remainingPeg[0]+remainingPeg[1]).firstChild.className="peg"}});abortSourceControllers.abort();this.PrepareDestinationInput()})})}else{if(PegSolitaireBoard.EmptyPegs()==32){this.textContainer.textContent=` 
      Completed Successfully ! \n
      ${this.userMoves} move(s) done
      `;document.getElementById("celebrations").style.display=""}else{this.textContainer.textContent=` 
        Finished
        ${this.userMoves} move(s) done \n
        Pegs Remaining :  ${33-PegSolitaireBoard.EmptyPegs()}
        `}document.getElementById("undoBtn").style.display="none";PegSolitaireBoard.updateStatusWithDot("Idle");this.boardHistory=[];this.boardHistory.push(PegSolitaireBoard.defaultStartingState)}};PrepareDestinationInput=()=>{this.ClearListeners();const abortDestinationControllers=new AbortController;let allowedMoves=PegSolitaireBoard.AllowedMoves();let allowedDestinations=new Set;allowedMoves.forEach(([source,destination])=>{if(PegSolitaireBoard.Equal(this.sourcePeg,source)){allowedDestinations.add(""+destination[0]+destination[1])}});allowedDestinations.forEach(destination=>{const destinationElement=document.getElementById(""+destination[0]+destination[1]);destinationElement.addEventListener("click",function(){PegSolitaireBoard.RemovePeg(this.sourcePeg);PegSolitaireBoard.RemovePeg([Number(destination[0]),Number(destination[1])]);PegSolitaireBoard.RemovePeg(FindBetweenPeg(this.sourcePeg,[Number(destination[0]),Number(destination[1])]));PegSolitaireBoard.ClearCells();var peg=document.createElement("span");peg.className="movedPeg";destinationElement.appendChild(peg);this.userMoves++;this.boardHistory.push(PegSolitaireBoard.GetBoardState());abortDestinationControllers.abort();this.PrepareSourceInput()});destinationElement.addEventListener("dragover",e=>{e.preventDefault()},{passive:false});destinationElement.addEventListener("drop",e=>{e.preventDefault();PegSolitaireBoard.RemovePeg(this.sourcePeg);PegSolitaireBoard.RemovePeg([Number(destination[0]),Number(destination[1])]);PegSolitaireBoard.RemovePeg(PegSolitaireBoard.FindBetweenPeg(this.sourcePeg,[Number(destination[0]),Number(destination[1])]));PegSolitaireBoard.ClearCells();var peg=document.createElement("span");peg.className="movedPeg";destinationElement.appendChild(peg);this.userMoves++;this.boardHistory.push(PegSolitaireBoard.GetBoardState());abortDestinationControllers.abort();this.PrepareSourceInput()},{signal:abortDestinationControllers.signal});destinationElement.className="allowedCell"});let sourcePegElement=document.getElementById(""+this.sourcePeg[0]+this.sourcePeg[1]);sourcePegElement.addEventListener("mouseout",function(){PegSolitaireBoard.ClearCells();abortDestinationControllers.abort();this.PrepareSourceInput()});sourcePegElement.addEventListener("touchstart",function(e){e.preventDefault();PegSolitaireBoard.ClearCells();abortDestinationControllers.abort();this.PrepareSourceInput()});sourcePegElement.addEventListener("drag",function(e){e.target.classList.add("dragging")});sourcePegElement.addEventListener("dragend",function(e){e.target.classList.remove("dragging")})};UndoMove=()=>{if(this.boardHistory.length>1){this.SetBoardState(this.boardHistory.at(-2));this.boardHistory.pop();this.userMoves--;this.PrepareSourceInput()}};ManualMode=()=>{this.ResetBoard();PegSolitaireBoard.updateStatusWithDot("Manual Mode");document.getElementById("undoBtn").style.display="unset";document.getElementById("randomBtn").style.display="none";document.getElementById("dfsBtn").style.display="none";document.getElementById("manualBtn").style.display="none";this.PrepareSourceInput()};FullReset=()=>{if(document.getElementById("status").textContent==="Idle"||document.getElementById("status").textContent==="Manual Mode"){this.sourcePeg=[-1,-1];this.userMoves=0;this.ResetBoard();this.textContainer.textContent=`
    Welcome to Peg Solitaire ! \n
    Click on the buttons below to start
      `;PegSolitaireBoard.updateStatusWithDot("Idle");document.getElementById("undoBtn").style.display="none";document.getElementById("randomBtn").style.display="unset";document.getElementById("dfsBtn").style.display="unset";document.getElementById("manualBtn").style.display="unset";this.boardHistory=[];this.boardHistory.push(PegSolitaireBoard.defaultStartingState)}else{window.location.reload()}}}import{PegSolitaireBoard}from"./board";export class PegSolitaireDFS{constructor(pegSolitaireBoardInstance){this.pegSolitaireBoardInstance=pegSolitaireBoardInstance;this.visited=[];this.memoryMap=new Map;this.execTime=0;this.cellMapping=new Map;this.MakeMap()}MakeMap=()=>{let count=-1;for(let i=0;i<7;i++){for(let j=0;j<7;j++){if(PegSolitaireBoard.InsideBoard([i,j])){++count;this.cellMapping.set(""+i+j,count)}}}};dfs(board){const stack=[{board:board,steps:0}];while(stack.length>0){const{board,steps}=stack.pop();this.pegSolitaireBoardInstance.SetBoardState(board);if(33-PegSolitaireBoard.EmptyPegs()===1){return true}if(!this.visited.includes(board)){this.visited.push(board)}const possibleMoves=PegSolitaireBoard.AllowedMoves();possibleMoves.forEach(([from,to])=>{this.pegSolitaireBoardInstance.SetBoardState(board);this.pegSolitaireBoardInstance.MovePeg(from,to);let newBoard=PegSolitaireBoard.GetBoardState();this.memoryMap.set(newBoard,board);if(!this.visited.includes(newBoard)){stack.push({board:newBoard,steps:steps+1})}})}return false}findSolution(){let startTime=performance.now();const foundSolution=this.dfs();this.execTime=performance.now()-startTime;if(!foundSolution){console.log("No solution found.")}}reconstructPath(){let path=[PegSolitaireBoard.finalState];let u=this.memoryMap.get(PegSolitaireBoard.finalState);while(u){path.push(u);u=this.memoryMap.get(u)}return path.reverse()}static findMove=(oldBoard,newBoard)=>{const oldArray=oldBoard.split("").map(Number);const newArray=newBoard.split("").map(Number);let diff=oldArray.reduce((acc,value,index)=>{if(value!==newArray[index]){acc.push(index)}return acc},[]);let pegs=diff.map(val=>{let temp=[...this.cellMapping].find(([key,value])=>val===value)[0];return temp});let destination=pegs.find(peg=>oldArray[this.cellMapping.get(peg)]===0);let source=pegs[0]===destination?[Number(pegs[2][0]),Number(pegs[2][1])]:[Number(pegs[0][0]),Number(pegs[0][1])];return[source,[Number(destination[0]),Number(destination[1])]]};displayDfsSolution=async()=>{this.pegSolitaireBoardInstance.UpdateDfsReport(this.visited.length,this.execTime);this.pegSolitaireBoardInstance.ResetBoard();let solutionPath=this.reconstructPath();PegSolitaireBoard.updateStatusWithDot("DFS : Displaying");await PegSolitaireBoard.sleep(2e3);for(let i=1;i<solutionPath.length;++i){let m=PegSolitaireDFS.findMove(solutionPath[i-1],solutionPath[i]);PegSolitaireBoard.MovePegForce(m[0],m[1]);await PegSolitaireBoard.sleep(1e3)}PegSolitaireBoard.updateStatusWithDot("Idle")};static validMoveChecker=(startingPos,EndPos)=>{if(startingPos[0]===EndPos[0]&&Math.abs(startingPos[1]-EndPos[1])===2){return true}else if(startingPos[1]===EndPos[1]&&Math.abs(startingPos[0]-EndPos[0])===2){return true}console.log("Invalid move found : ",startingPos,EndPos);return false}}var selectedIndex=0;function toggleCommandPalette(){selectedIndex=0;const commandPalette=document.getElementById("commandPalette");commandPalette.style.display=commandPalette.style.display==="block"?"none":"block"}document.addEventListener("keydown",function(event){const commandPalette=document.getElementById("commandPalette");if(event.key==="Escape"){commandPalette.style.display="none"}else if(event.key==="p"){toggleCommandPalette()}});document.addEventListener("click",function(event){const commandPalette=document.getElementById("commandPalette");if(event.target!==commandPalette&&!commandPalette.contains(event.target)){commandPalette.style.display="none"}});document.addEventListener("keydown",function(event){if(document.getElementById("commandPalette").style.display==="block"){const commands=document.querySelectorAll(".command");if(event.key==="ArrowUp"&&selectedIndex>0){selectedIndex--}else if(event.key==="ArrowDown"&&selectedIndex<commands.length-1){selectedIndex++}commands.forEach((command,index)=>{if(index===selectedIndex){command.classList.add("selected")}else{command.classList.remove("selected")}});if(event.key==="Enter"){commands[selectedIndex].click()}}});function switchTheme(){toggleCommandPalette();document.getElementById("toggleInputID").checked=!document.getElementById("toggleInputID").checked;document.getElementById("toggleInputID").dispatchEvent(new Event("change"))}document.getElementById("switchTheme").onclick=switchTheme;import{PegSolitaireBoard}from"./board.js";import{ThemeSwitcher}from"./theme.js";import{PegSolitaireDFS}from"./dfs.js";import"./palette.js";const pegSolitaireBoard=new PegSolitaireBoard;const themeSwitcher=new ThemeSwitcher;themeSwitcher.initThemeSwitch();const addClickListener=(id,callback)=>{const element=document.getElementById(id);element.onclick=()=>{toggleCommandPalette();callback()}};const runDFS=()=>{pegSolitaireBoard.ResetBoard();PegSolitaireBoard.updateStatusWithDot("DFS : Exploring");document.getElementById("randomBtn").style.display="none";document.getElementById("dfsBtn").style.display="none";document.getElementById("manualBtn").style.display="none";document.getElementById("textContainerID").textContent="Exploring...";requestAnimationFrame(()=>{requestAnimationFrame(()=>{const pegSolitaireDFS=new PegSolitaireDFS(pegSolitaireBoard);pegSolitaireDFS.findSolution();pegSolitaireDFS.displayDfsSolution()})})};addClickListener("manualBtn",pegSolitaireBoard.ManualMode);addClickListener("randomBtn",()=>pegSolitaireBoard.RunExperiment(1));addClickListener("dfsBtn",runDFS);addClickListener("resetBtn",()=>pegSolitaireBoard.FullReset());addClickListener("undoBtn",()=>pegSolitaireBoard.UndoMove());document.getElementById("undoBtn").style.display="none";addClickListener("startRandomAgent",()=>pegSolitaireBoard.RunExperiment(1));addClickListener("start5RandomAgents",()=>pegSolitaireBoard.RunExperiment(5));addClickListener("startManualMode",pegSolitaireBoard.ManualMode);addClickListener("startDFS",runDFS);addClickListener("undoMove",()=>pegSolitaireBoard.UndoMove());addClickListener("fullReset",()=>pegSolitaireBoard.FullReset());export class ThemeSwitcher{constructor(){this.starsId="starsCSS";this.wavesId="wavesCSS"}initThemeSwitch(){const{matches:userPrefersDark}=window.matchMedia("(prefers-color-scheme: dark)");let theme=localStorage.getItem("theme")?localStorage.getItem("theme"):userPrefersDark?"dark":"light";document.body.className=theme==="dark"?"dark-mode":"";localStorage.setItem("theme",theme);this.handleThemeCSSLoading(theme);const toggle=document.getElementById("toggleInputID");toggle.checked=theme==="dark"?true:false;toggle.addEventListener("change",e=>{const theme=e.target.checked?"dark":"light";document.body.className=theme==="dark"?"dark-mode":"";localStorage.setItem("theme",theme);this.handleThemeCSSLoading(theme)})}loadStars(){if(!document.getElementById(this.starsId)){const head=document.getElementsByTagName("head")[0];const link=document.createElement("link");link.id=this.starsId;link.rel="stylesheet";link.type="text/css";link.href="stars.css";link.media="all";head.appendChild(link)}}removeStars(){document.getElementById(this.starsId)?.remove()}loadWaves(){if(!document.getElementById(this.wavesId)){const head=document.getElementsByTagName("head")[0];const link=document.createElement("link");link.id=this.wavesId;link.rel="stylesheet";link.type="text/css";link.href="waves.css";link.media="all";head.appendChild(link)}}removeWaves(){document.getElementById(this.wavesId)?.remove()}handleThemeCSSLoading(theme){if(theme==="dark"){this.removeWaves();this.loadStars()}else{this.removeStars();this.loadWaves()}}}